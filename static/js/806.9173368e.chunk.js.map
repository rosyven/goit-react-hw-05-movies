{"version":3,"file":"static/js/806.9173368e.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","webpack://react-homework-template/./src/components/Loading/Loading.module.css?25ee","components/Loading/Loading.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/SearchedMovies/SearchedMovies.module.css?78c2","components/SearchedMovies/SearchedMovies.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import React from \"react\";\n\nconst Error = () => {\n    return <h1>Error</h1>\n}\n\nexport default Error;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loading_loader__rS1ky\"};","import React from \"react\";\nimport { Oval } from 'react-loader-spinner';\nimport css from './Loading.module.css'\n\nconst Loading = () => (\n    <div className={css.loader}>\n        <Oval\n  height={80}\n  width={80}\n  color=\"#4fa94d\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel='oval-loading'\n  secondaryColor=\"#4fa94d\"\n  strokeWidth={2}\n  strokeWidthSecondary={2}\n/>\n  </div>\n);\nexport default Loading;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\"};","import { useState } from \"react\";\nimport css from \"./Form.module.css\";\n\nconst SearchForm = ({ setSearchParams }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = (e) => {\n      // setSearchQuery(e.target.value);\n      const query = e.target.value;\n    setSearchQuery(query);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams(searchQuery);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Search films\"\n        value={searchQuery}\n        onChange={e => handleChange(e)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"search_list\":\"SearchedMovies_search_list__P+jbP\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './SearchedMovies.module.css';\n\nconst BASE_IMG = 'https://image.tmdb.org/t/p/w200';\n\nconst SearchedMovies = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul className={css.search_list}>\n        {movies.map(({ id, title, poster_path }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              <img src={`${BASE_IMG}${poster_path}`} alt={title} />\n              {title && title.substring(0, 18)}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default SearchedMovies;","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Error from \"components/Error/Error\";\nimport Loading from \"components/Loading/Loading\";\nimport SearchForm from \"components/Form/Form\";\nimport SearchedMovies from \"components/SearchedMovies/SearchedMovies\";\nimport { getSearchMovies } from \"services/api\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query') ?? '';\n  const handleSearch = (query) => {\n    setSearchParams({ query: query });\n  };\n    \n    useEffect(() => {\n    if (!queryParam) return setMovies([]);\n    const searchMovie = async (query) => {\n      setLoading(true);\n      try {\n        const { results } = await getSearchMovies(query);\n        setMovies(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setError(true);\n        setLoading(false);\n      }\n    };\n    searchMovie(queryParam);\n  }, [queryParam]);\n\n  return (\n    <section>\n      <div>\n        <SearchForm setSearchParams={handleSearch} />\n        {loading ? (\n          <Loading />\n        ) : (\n          <>\n            {movies.length !== 0 && <h2>Movies: '{queryParam}'</h2>}\n            <SearchedMovies movies={movies} />\n          </>\n        )}\n        {error && <Error />}\n      </div>\n    </section>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = '819e0dd0d797ffa44ee5350e15674068';\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getMovies() {\n  return (await axios.get(`${BASE_URL}/trending/all/day`)).data;\n}\nexport async function getReviews(id) {\n  return (await axios.get(`${BASE_URL}/movie/${id}/reviews`)).data;\n}\nexport async function getCast(id) {\n  return (await axios.get(`${BASE_URL}/movie/${id}/credits`)).data;\n}\nexport async function getMovieDetails(id) {\n  return (await axios.get(`${BASE_URL}/movie/${id}`)).data;\n}\nexport async function getSearchMovies(queryText, page = 1) {\n  return (\n    await axios.get(`${BASE_URL}/search/movie?query=${queryText}&page=${page}`)\n  ).data;\n}\n"],"names":["className","css","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","setSearchParams","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","type","placeholder","value","onChange","query","target","handleChange","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","substring","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","queryParam","get","useEffect","searchMovie","getSearchMovies","results","console","log","Loading","length","Error","BASE_URL","getMovies","axios","data","getReviews","getCast","getMovieDetails","queryText","page","api_key"],"sourceRoot":""}